{"version":3,"sources":["component/todoReact/toDo.js","App.js","index.js"],"names":["ToDo","useState","myInputdata","setmyInputData","lists","localStorage","getItem","JSON","parse","getLocalData","items","setItems","isEditItem","setisEditItem","toggleButton","settoggleButton","addItem","map","curr","id","name","newInputData","Date","getTime","toString","alert","useEffect","setItem","stringify","className","src","alt","type","placeholder","value","onChange","event","target","onClick","EditItem","find","curritem","editItem","leftItem","filter","deleteItem","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAoHeA,G,MAvGF,WACT,MAAqCC,mBAAS,IAA9C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAyBF,mBAZR,WACjB,IAAMG,EAAQC,aAAaC,QAAQ,cACnC,OAAGF,EACQG,KAAKC,MAAMJ,GAGX,GAMuBK,IAAlC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAmCV,mBAAS,IAA5C,mBAAOW,EAAP,KAAkBC,EAAlB,KACA,EAAuCZ,oBAAS,GAAhD,mBAAOa,EAAP,KAAoBC,EAApB,KAGMC,EAAU,WACZ,GAAId,EAIC,GAAGA,GAAeY,EAEnBH,EAASD,EAAMO,KAAI,SAACC,GAChB,OAAGA,EAAKC,KAAKP,EAET,2BAAWM,GAAX,IAAgBE,KAAMlB,IAEnBgB,MAIXf,EAAe,IACfU,EAAc,IACdE,GAAgB,OAEhB,CACA,IAAMM,EAAe,CACjBF,IAAK,IAAIG,MAAOC,UAAUC,WAC1BJ,KAAOlB,GAGXS,EAAS,GAAD,mBAAKD,GAAL,CAAWW,KACnBlB,EAAe,SAxBfsB,MAAM,yBAqDd,OAJJC,qBAAU,WACTrB,aAAasB,QAAQ,aAAapB,KAAKqB,UAAUlB,MAChD,CAACA,IAGK,8BACI,qBAAKmB,UAAU,WAAf,SACA,sBAAKA,UAAU,YAAf,UACA,mCACA,qBAAKC,IAAI,oBAAoBC,IAAI,WACjC,+DAEA,sBAAKF,UAAU,WAAf,UACI,uBAAOG,KAAK,OAAOC,YAAY,aAAaJ,UAAU,eAAeK,MAAOhC,EAAaiC,SAAU,SAACC,GAAD,OAASjC,EAAeiC,EAAMC,OAAOH,UACvIpB,EAAgB,mBAAGe,UAAU,qBAAqBS,QAAStB,IAAmB,mBAAGa,UAAU,qBAAqBS,QAAStB,OAG9H,qBAAKa,UAAU,YAAf,SACSnB,EAAMO,KAAI,SAACC,GACR,OACI,sBAAKW,UAAU,WAAf,UACA,6BAAKX,EAAKE,OAEV,sBAAKS,UAAU,WAAf,UACA,mBAAGA,UAAU,sBAAsBS,QAAS,kBAjCvD,SAACnB,GACd,IAAIoB,EAAW7B,EAAM8B,MAAK,SAACC,GAAa,OAAOA,EAAStB,KAAKA,KAE7DhB,EAAeoC,EAASnB,MACxBP,EAAcM,GACdJ,GAAgB,GA4BwD2B,CAASxB,EAAKC,OAC9D,mBAAGU,UAAU,2BAA2BS,QAAS,kBA7C1D,SAACnB,GAChB,IAAMwB,EAAWjC,EAAMkC,QAAO,SAACH,GAAa,OAAOA,EAAStB,KAAKA,KAEjER,EAASgC,GA0CoEE,CAAW3B,EAAKC,YALtCD,EAAKC,SAepD,qBAAKU,UAAU,YAAf,SAA2B,wBAAQA,UAAU,eAAe,oBAAkB,aAAaS,QAAS,kBA/C5G3B,EAAS,SACTR,EAAe,KA8CoB,SAAgG,0DC9FxH2C,EATH,WACV,OACE,8BACA,cAAC,EAAD,OCHJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f2e3091a.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport \"./style.css\"\r\n\r\nconst getLocalData = ()=>{\r\n    const lists = localStorage.getItem(\"mytoDoList\")\r\n    if(lists)\r\n        return JSON.parse(lists)\r\n    else\r\n    {\r\n        return []\r\n    }\r\n}\r\n\r\nconst ToDo = () => {\r\n    const [myInputdata,setmyInputData] = useState(\"\")\r\n    const [items,setItems] = useState(getLocalData())\r\n    const [isEditItem,setisEditItem] = useState(\"\")\r\n    const [toggleButton,settoggleButton] = useState(false)\r\n\r\n\r\n    const addItem = ()=>{\r\n        if(!myInputdata)\r\n        {\r\n            alert(\"please give the ToDo\")\r\n        }\r\n        else if(myInputdata && toggleButton)\r\n        {\r\n            setItems(items.map((curr)=>{\r\n                if(curr.id===isEditItem)\r\n                {\r\n                    return({...curr,name: myInputdata})\r\n                }\r\n                return curr\r\n            }))\r\n\r\n\r\n            setmyInputData(\"\")\r\n            setisEditItem(\"\")\r\n            settoggleButton(false)\r\n        }\r\n        else{\r\n            const newInputData = {\r\n                id : new Date().getTime().toString(),\r\n                name : myInputdata\r\n            } \r\n            \r\n            setItems([...items,newInputData])\r\n            setmyInputData(\"\")\r\n        }\r\n\r\n    }\r\n\r\nconst deleteItem = (id)=>{\r\n    const leftItem = items.filter((curritem)=>{ return curritem.id!==id})\r\n\r\n    setItems(leftItem)\r\n}\r\n\r\nconst deleteAllItems = (id)=>{\r\n    \r\n    setItems([])\r\n    setmyInputData(\"\")\r\n}\r\nconst editItem = (id)=>{\r\n    let EditItem = items.find((curritem)=>{ return curritem.id===id})\r\n\r\n    setmyInputData(EditItem.name)\r\n    setisEditItem(id)\r\n    settoggleButton(true)\r\n       \r\n}\r\n\r\nuseEffect(()=>{\r\n localStorage.setItem(\"mytoDoList\",JSON.stringify(items))\r\n},[items])\r\n\r\n    return (\r\n        <div>  \r\n            <div className=\"main-div\">\r\n            <div className=\"child-div\">\r\n            <figure>\r\n            <img src=\"./images/todo.svg\" alt=\"images\"></img>\r\n            <figcaption>Add your list here</figcaption>\r\n            </figure>\r\n            <div className=\"addItems\">\r\n                <input type=\"text\" placeholder=\"Add inputs\" className=\"form-control\" value={myInputdata} onChange={(event)=>setmyInputData(event.target.value)}></input>\r\n                {toggleButton ? (<i className=\"fa fa-edit add-btn\" onClick={addItem}></i>) : ( <i className=\"fa fa-plus add-btn\" onClick={addItem}></i> )}\r\n            </div>\r\n\r\n            <div className=\"showItems\">\r\n                    {items.map((curr)=>{\r\n                        return (\r\n                            <div className=\"eachItem\" key={curr.id}>\r\n                            <h3>{curr.name}</h3>\r\n                \r\n                            <div className=\"todo-btn\">\r\n                            <i className=\"far fa-edit add-btn\" onClick={()=>editItem(curr.id)}></i>\r\n                            <i className=\"far fa-trash-alt add-btn\" onClick={()=>deleteItem(curr.id)}></i>\r\n                            </div>\r\n                            \r\n                            </div>\r\n                        )\r\n                    })}\r\n\r\n            \r\n            </div>\r\n\r\n            <div className=\"showItems\"><button className=\"btn effect04\" data-sm-link-text=\"Remove All\" onClick={()=>deleteAllItems()} ><span>CheckList</span></button></div>\r\n            \r\n            </div>\r\n            </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDo\r\n","import React from \"react\";\nimport UseReducer from \"./component/Hooks/useReducer\";\nimport ToDo from \"./component/todoReact/toDo\";\n\nconst App = () => {\n  return(\n    <div>\n    <ToDo />\n    </div>\n  ) \n  \n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}